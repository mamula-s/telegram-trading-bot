// src/utils/messageFormatter.js
const formatSignalMessage = (signal, type = 'new') => {
    let message = '';
    
    switch (type) {
      case 'new':
        message = `
  üö® –ù–æ–≤–∏–π ${signal.type === 'FUTURES' ? "—Ñ'—é—á–µ—Ä—Å–Ω–∏–π" : '—Å–ø–æ—Ç–æ–≤–∏–π'} —Å–∏–≥–Ω–∞–ª
  
  üìä –ü–∞—Ä–∞: ${signal.pair}
  ${signal.direction === 'LONG' ? 'üìà LONG' : 'üìâ SHORT'}
  üí∞ –¶—ñ–Ω–∞ –≤—Ö–æ–¥—É: $${signal.entryPrice}
  üéØ Take Profit: $${signal.takeProfit}
  üõë Stop Loss: $${signal.stopLoss}
  ${signal.type === 'FUTURES' ? `üìä Leverage: ${signal.leverage}x\n` : ''}
  ‚è∞ Timeframe: ${signal.timeframe}
  
  ${signal.description || ''}
  
  ‚ö†Ô∏è –†–∏–∑–∏–∫ –º–µ–Ω–µ–¥–∂–º–µ–Ω—Ç:
  - –†–æ–∑–º—ñ—Ä –ø–æ–∑–∏—Ü—ñ—ó: 1-2% –≤—ñ–¥ –¥–µ–ø–æ–∑–∏—Ç—É
  - –û–±–æ–≤'—è–∑–∫–æ–≤–æ –≤—Å—Ç–∞–Ω–æ–≤–ª—é–π—Ç–µ Stop Loss
  - –ù–µ –≤—Ö–æ–¥—å—Ç–µ –ø—ñ—Å–ª—è —Ä—ñ–∑–∫–æ–≥–æ —Ä—É—Ö—É
  
  üìù ID: #${signal.id}
        `;
        break;
  
      case 'update':
        message = `
  üìù –û–Ω–æ–≤–ª–µ–Ω–Ω—è —Å–∏–≥–Ω–∞–ª—É #${signal.id}
  
  ${signal.pair} | ${signal.direction}
  
  üîÑ –û–Ω–æ–≤–ª–µ–Ω—ñ –∑–Ω–∞—á–µ–Ω–Ω—è:
  ${signal.takeProfit ? `‚Ä¢ Take Profit: $${signal.takeProfit}\n` : ''}
  ${signal.stopLoss ? `‚Ä¢ Stop Loss: $${signal.stopLoss}\n` : ''}
  ${signal.description ? `\nüìå ${signal.description}` : ''}
        `;
        break;
  
      case 'close':
        const result = signal.result > 0 ? `‚úÖ +${signal.result}%` : `‚ùå ${signal.result}%`;
        message = `
  üèÅ –ó–∞–∫—Ä–∏—Ç—Ç—è —Å–∏–≥–Ω–∞–ª—É #${signal.id}
  
  üìä ${signal.pair} | ${signal.direction}
  üíµ –†–µ–∑—É–ª—å—Ç–∞—Ç: ${result}
  üí∞ –¶—ñ–Ω–∞ –≤–∏—Ö–æ–¥—É: $${signal.exitPrice}
  
  ${signal.closeNote ? `üìù ${signal.closeNote}` : ''}
        `;
        break;
  
      default:
        message = '–ù–µ–≤—ñ–¥–æ–º–∏–π —Ç–∏–ø –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è';
    }
  
    return message.trim();
  };
  
  const formatNewsMessage = (news) => {
    return `
  üì∞ ${news.title}
  
  ${news.content}
  
  ${news.tags ? `üè∑ ${news.tags.map(tag => `#${tag}`).join(' ')}` : ''}
  ${news.source ? `\nüìé –î–∂–µ—Ä–µ–ª–æ: ${news.source}` : ''}
    `.trim();
  };
  
  const formatSubscriptionMessage = (subscription) => {
    return `
  ‚ú® –í–∞—à–∞ –ø—ñ–¥–ø–∏—Å–∫–∞ ${subscription.type}
  
  üìÖ –ê–∫—Ç–∏–≤–Ω–∞ –¥–æ: ${new Date(subscription.endDate).toLocaleDateString()}
  ‚è∞ –ó–∞–ª–∏—à–∏–ª–æ—Å—å –¥–Ω—ñ–≤: ${subscription.daysLeft}
  
  ${subscription.features.map(feature => `‚úì ${feature}`).join('\n')}
    `.trim();
  };
  
  const formatErrorMessage = (error) => {
    return `
  ‚ùå –ü–æ–º–∏–ª–∫–∞
  
  ${error.message}
  ${error.details ? `\n–î–µ—Ç–∞–ª—ñ: ${error.details}` : ''}
  
  –Ø–∫—â–æ –ø—Ä–æ–±–ª–µ–º–∞ –ø–æ–≤—Ç–æ—Ä—é—î—Ç—å—Å—è, –∑–≤'—è–∂—ñ—Ç—å—Å—è –∑ –ø—ñ–¥—Ç—Ä–∏–º–∫–æ—é.
    `.trim();
  };
  
  module.exports = {
    formatSignalMessage,
    formatNewsMessage,
    formatSubscriptionMessage,
    formatErrorMessage
  };