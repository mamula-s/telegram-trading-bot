const userService = require('../../services/userService');

const sendFuturesSignal = async (bot, signal) => {
  const users = await userService.getSubscribedUsers('premium');
  
  const message = `
    üö® –ù–æ–≤–∏–π —Ñ'—é—á–µ—Ä—Å–Ω–∏–π —Å–∏–≥–Ω–∞–ª üö®
    –ü–∞—Ä–∞: ${signal.pair}
    –ù–∞–ø—Ä—è–º–æ–∫: ${signal.direction}
    –¶—ñ–Ω–∞ –≤—Ö–æ–¥—É: ${signal.entryPrice}
    –°—Ç–æ–ø-–ª–æ—Å—Å: ${signal.stopLoss}
    –¢–µ–π–∫-–ø—Ä–æ—Ñ—ñ—Ç: ${signal.takeProfit}
  `;

  for (const user of users) {
    try {
      await bot.sendMessage(user.telegramId, message);
    } catch (error) {
      console.error(`–ü–æ–º–∏–ª–∫–∞ –≤—ñ–¥–ø—Ä–∞–≤–∫–∏ —Å–∏–≥–Ω–∞–ª—É –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—É ${user.telegramId}:`, error);
    }
  }
};

const sendSpotSignal = async (bot, signal) => {
  const users = await userService.getSubscribedUsers('premium');
  
  const message = `
    üìä –ù–æ–≤–∏–π —Å–ø–æ—Ç–æ–≤–∏–π —Å–∏–≥–Ω–∞–ª üìä
    –ü–∞—Ä–∞: ${signal.pair}
    –ù–∞–ø—Ä—è–º–æ–∫: ${signal.direction}
    –¶—ñ–Ω–∞ –≤—Ö–æ–¥—É: ${signal.entryPrice}
    –°—Ç–æ–ø-–ª–æ—Å—Å: ${signal.stopLoss}
    –¢–µ–π–∫-–ø—Ä–æ—Ñ—ñ—Ç: ${signal.takeProfit}
  `;

  for (const user of users) {
    try {
      await bot.sendMessage(user.telegramId, message);
    } catch (error) {
      console.error(`–ü–æ–º–∏–ª–∫–∞ –≤—ñ–¥–ø—Ä–∞–≤–∫–∏ —Å–∏–≥–Ω–∞–ª—É –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—É ${user.telegramId}:`, error);
    }
  }
};

module.exports = {
  sendFuturesSignal,
  sendSpotSignal
};