import React, { useState } from 'react';
import { Gift, Sparkles, Timer, TrendingUp, ExternalLink, Star, AlertCircle } from 'lucide-react';
import Card from '../components/Card';

const AirdropsPage = () => {
  const [activeTab, setActiveTab] = useState('active');

  const airdrops = [
    {
      id: 1,
      title: 'Jupiter Protocol',
      description: '–î–µ—Ü–µ–Ω—Ç—Ä–∞–ª—ñ–∑–æ–≤–∞–Ω–∞ –±—ñ—Ä–∂–∞ –Ω–∞ Solana',
      status: 'active',
      endDate: '2024-03-15',
      reward: '$500-$5000',
      requirements: [
        '–ü—ñ–¥–∫–ª—é—á–∏—Ç–∏ –≥–∞–º–∞–Ω–µ—Ü—å',
        '–ó—Ä–æ–±–∏—Ç–∏ —Å–≤–æ–ø –Ω–∞ $100',
        '–£—Ç—Ä–∏–º—É–≤–∞—Ç–∏ SOL'
      ],
      riskLevel: 'low',
      probability: 'high',
      category: 'DEX'
    },
    {
      id: 2,
      title: 'LayerZero',
      description: '–û–º–Ω—ñ—á–µ–π–Ω –ø—Ä–æ—Ç–æ–∫–æ–ª',
      status: 'upcoming',
      startDate: '2024-03-20',
      expectedReward: '$300-$3000',
      requirements: [
        '–ë—Ä–∏–¥–∂ —Ç–æ–∫–µ–Ω—ñ–≤',
        '–ú—ñ–Ω—ñ–º—É–º 10 —Ç—Ä–∞–Ω–∑–∞–∫—Ü—ñ–π',
        '–í–∑–∞—î–º–æ–¥—ñ—è –∑ –ø—Ä–æ—Ç–æ–∫–æ–ª–æ–º'
      ],
      riskLevel: 'medium',
      probability: 'medium',
      category: 'Infrastructure'
    }
  ];

  const reviews = [
    {
      id: 1,
      title: '–û–≥–ª—è–¥ Starknet',
      description: '–î–µ—Ç–∞–ª—å–Ω–∏–π –∞–Ω–∞–ª—ñ–∑ L2 —Ä—ñ—à–µ–Ω–Ω—è',
      type: 'video',
      duration: '15 —Ö–≤',
      publishedAt: '2024-02-28',
      views: 1200,
      rating: 4.8
    }
  ];

  const getRiskColor = (level) => {
    switch (level) {
      case 'low': return 'text-green-600 bg-green-100';
      case 'medium': return 'text-yellow-600 bg-yellow-100';
      case 'high': return 'text-red-600 bg-red-100';
      default: return 'text-gray-600 bg-gray-100';
    }
  };

  return (
    <div className="space-y-6">
      {/* Header */}
      <div className="bg-gradient-to-r from-purple-600 to-blue-600 rounded-2xl p-6 text-white">
        <div className="flex items-center gap-3 mb-2">
          <Gift className="w-6 h-6" />
          <h1 className="text-2xl font-bold">–ê—ñ—Ä–¥—Ä–æ–ø–∏ —Ç–∞ –û–≥–ª—è–¥–∏</h1>
        </div>
        <p className="opacity-90">–ê–∫—Ç—É–∞–ª—å–Ω—ñ –∞—ñ—Ä–¥—Ä–æ–ø–∏ —Ç–∞ –æ–≥–ª—è–¥–∏ –ø—Ä–æ–µ–∫—Ç—ñ–≤</p>
      </div>

      {/* Tabs */}
      <div className="flex space-x-2 overflow-x-auto py-2">
        {['active', 'upcoming', 'reviews'].map((tab) => (
          <button
            key={tab}
            onClick={() => setActiveTab(tab)}
            className={`px-4 py-2 rounded-full whitespace-nowrap ${
              activeTab === tab
                ? 'bg-blue-600 text-white'
                : 'bg-gray-100 text-gray-600 hover:bg-gray-200'
            }`}
          >
            {tab === 'active' && '–ê–∫—Ç–∏–≤–Ω—ñ'}
            {tab === 'upcoming' && '–û—á—ñ–∫—É—é—Ç—å—Å—è'}
            {tab === 'reviews' && '–û–≥–ª—è–¥–∏'}
          </button>
        ))}
      </div>

      {/* Risk Level Info */}
      <Card className="bg-yellow-50 border border-yellow-100">
        <div className="flex gap-3">
          <AlertCircle className="w-5 h-5 text-yellow-600 shrink-0" />
          <div className="text-sm text-yellow-700">
            <p className="font-medium mb-1">–†—ñ–≤–Ω—ñ —Ä–∏–∑–∏–∫—É:</p>
            <ul className="space-y-1">
              <li>üü¢ –ù–∏–∑—å–∫–∏–π - –±–µ–∑–ø–µ—á–Ω—ñ —Ç–∞ –ø–µ—Ä–µ–≤—ñ—Ä–µ–Ω—ñ –ø—Ä–æ–µ–∫—Ç–∏</li>
              <li>üü° –°–µ—Ä–µ–¥–Ω—ñ–π - –ø–æ—Ç—Ä–µ–±—É—î —É–≤–∞–≥–∏ —Ç–∞ –¥–æ—Å–ª—ñ–¥–∂–µ–Ω–Ω—è</li>
              <li>üî¥ –í–∏—Å–æ–∫–∏–π - –±—É–¥—å—Ç–µ –æ—Å–æ–±–ª–∏–≤–æ –æ–±–µ—Ä–µ–∂–Ω—ñ</li>
            </ul>
          </div>
        </div>
      </Card>

      {/* Content */}
      <div className="space-y-4">
        {activeTab !== 'reviews' ? (
          // Airdrops List
          airdrops
            .filter(airdrop => 
              activeTab === 'active' 
                ? airdrop.status === 'active'
                : airdrop.status === 'upcoming'
            )
            .map(airdrop => (
              <Card key={airdrop.id} className="space-y-4">
                <div className="flex justify-between items-start">
                  <div>
                    <h3 className="font-bold text-lg">{airdrop.title}</h3>
                    <p className="text-gray-600">{airdrop.description}</p>
                  </div>
                  <div className={`px-3 py-1 rounded-full text-sm ${getRiskColor(airdrop.riskLevel)}`}>
                    {airdrop.riskLevel === 'low' && '–ù–∏–∑—å–∫–∏–π —Ä–∏–∑–∏–∫'}
                    {airdrop.riskLevel === 'medium' && '–°–µ—Ä–µ–¥–Ω—ñ–π —Ä–∏–∑–∏–∫'}
                    {airdrop.riskLevel === 'high' && '–í–∏—Å–æ–∫–∏–π —Ä–∏–∑–∏–∫'}
                  </div>
                </div>

                <div className="flex flex-wrap gap-4 text-sm">
                  <div className="flex items-center gap-1">
                    <Timer className="w-4 h-4 text-gray-400" />
                    <span>{airdrop.status === 'active' ? '–î–æ:' : '–°—Ç–∞—Ä—Ç:'}</span>
                    <span className="text-gray-900">
                      {new Date(airdrop.status === 'active' ? airdrop.endDate : airdrop.startDate).toLocaleDateString()}
                    </span>
                  </div>
                  <div className="flex items-center gap-1">
                    <Sparkles className="w-4 h-4 text-gray-400" />
                    <span>–û—á—ñ–∫—É–≤–∞–Ω–∞ –≤–∏–Ω–∞–≥–æ—Ä–æ–¥–∞:</span>
                    <span className="text-gray-900">
                      {airdrop.reward || airdrop.expectedReward}
                    </span>
                  </div>
                  <div className="flex items-center gap-1">
                    <TrendingUp className="w-4 h-4 text-gray-400" />
                    <span>–ô–º–æ–≤—ñ—Ä–Ω—ñ—Å—Ç—å:</span>
                    <span className="text-gray-900">{airdrop.probability}</span>
                  </div>
                </div>

                <div>
                  <h4 className="font-medium mb-2">–í–∏–º–æ–≥–∏:</h4>
                  <ul className="space-y-2">
                    {airdrop.requirements.map((req, index) => (
                      <li key={index} className="flex items-center gap-2 text-sm">
                        <div className="w-1.5 h-1.5 rounded-full bg-blue-600" />
                        {req}
                      </li>
                    ))}
                  </ul>
                </div>

                <div className="flex justify-between pt-2 border-t">
                  <button className="text-blue-600 text-sm font-medium hover:text-blue-700">
                    –î–µ—Ç–∞–ª—å–Ω—ñ—à–µ
                  </button>
                  <button className="flex items-center gap-1 text-blue-600 text-sm font-medium hover:text-blue-700">
                    <ExternalLink className="w-4 h-4" />
                    –ü–µ—Ä–µ–π—Ç–∏ –¥–æ –ø—Ä–æ–µ–∫—Ç—É
                  </button>
                </div>
              </Card>
            ))
        ) : (
          // Reviews List
          reviews.map(review => (
            <Card key={review.id} className="space-y-3">
              <div className="flex justify-between items-start">
                <div>
                  <h3 className="font-bold">{review.title}</h3>
                  <p className="text-gray-600 text-sm">{review.description}</p>
                </div>
                <div className="flex items-center gap-1 text-yellow-500">
                  <Star className="w-4 h-4 fill-current" />
                  <span className="text-sm">{review.rating}</span>
                </div>
              </div>

              <div className="flex flex-wrap gap-4 text-sm text-gray-500">
                <span>{review.type === 'video' ? 'üé• –í—ñ–¥–µ–æ' : 'üìÑ –°—Ç–∞—Ç—Ç—è'}</span>
                <span>‚è±Ô∏è {review.duration}</span>
                <span>üëÅÔ∏è {review.views} –ø–µ—Ä–µ–≥–ª—è–¥—ñ–≤</span>
                <span>üìÖ {new Date(review.publishedAt).toLocaleDateString()}</span>
              </div>

              <button className="w-full py-2 bg-blue-600 text-white rounded-xl hover:bg-blue-700 transition-colors">
                {review.type === 'video' ? '–î–∏–≤–∏—Ç–∏—Å—è' : '–ß–∏—Ç–∞—Ç–∏'}
              </button>
            </Card>
          ))
        )}
      </div>
    </div>
  );
};

export default AirdropsPage;